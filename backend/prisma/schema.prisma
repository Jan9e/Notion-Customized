generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  password        String
  name            String
  resetToken      String?
  resetTokenExpiry DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  workspaces      Workspace[]
  pages           Page[]
}

model Workspace {
  id        String   @id @default(cuid())
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pages     Page[]
}

model Page {
  id          String    @id @default(cuid())
  title       String
  content     String?   @db.Text
  icon        String?
  isArchived  Boolean   @default(false)
  isFavorite  Boolean   @default(false)
  order       Int       @default(0)
  parentId    String?
  workspaceId String
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  parent      Page?     @relation("PageToPage", fields: [parentId], references: [id], onDelete: SetNull)
  children    Page[]    @relation("PageToPage")

  @@index([workspaceId, parentId, order])
  @@index([userId, isFavorite])
} 